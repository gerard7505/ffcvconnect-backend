<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Admin__CLASSMETADATA__' => 0,
'App__Entity__Club__CLASSMETADATA__' => 1,
'App__Entity__Jugador__CLASSMETADATA__' => 2,
'App__Entity__JugadoresOfertas__CLASSMETADATA__' => 3,
'App__Entity__Oferta__CLASSMETADATA__' => 4,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Admin',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AdminRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'email' => $o[3],
                        'password' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'email' => 'email',
                        'password' => 'password',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'email' => 'email',
                        'password' => 'password',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'admin',
                    ],
                ],
                'idGenerator' => [
                    $o[5],
                ],
                'name' => [
                    'App\\Entity\\Admin',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'email',
                    'password',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'email',
                    'password',
                ],
                'length' => [
                    2 => 100,
                    100,
                    255,
                ],
                'unique' => [
                    3 => true,
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Club',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'email' => $o[3],
                        'city' => $o[4],
                        'password' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'email' => 'email',
                        'city' => 'city',
                        'password' => 'password',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'email' => 'email',
                        'city' => 'city',
                        'password' => 'password',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'clubs',
                    ],
                ],
                'associationMappings' => [
                    [
                        'ofertas' => $o[6],
                    ],
                ],
                'idGenerator' => [
                    $o[7],
                ],
                'name' => [
                    'App\\Entity\\Club',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'email',
                    'city',
                    'password',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'email',
                    'city',
                    'password',
                ],
                'length' => [
                    2 => 100,
                    100,
                    100,
                    255,
                ],
                'unique' => [
                    3 => true,
                ],
                'cascade' => [
                    6 => [
                        'persist',
                        'remove',
                    ],
                ],
                'fetch' => [
                    6 => 2,
                ],
                'orphanRemoval' => [
                    6 => true,
                ],
                'sourceEntity' => [
                    6 => 'App\\Entity\\Club',
                ],
                'mappedBy' => [
                    6 => 'club',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    6 => 'ofertas',
                ],
                'targetEntity' => [
                    6 => 'App\\Entity\\Oferta',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTableMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTableMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Jugador',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\JugadorRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'name' => $o[2],
                        'lastName' => $o[3],
                        'email' => $o[4],
                        'dni' => $o[5],
                        'address' => $o[6],
                        'city' => $o[7],
                        'dateOfBirth' => $o[8],
                        'password' => $o[9],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'last_name' => 'lastName',
                        'email' => 'email',
                        'dni' => 'dni',
                        'address' => 'address',
                        'city' => 'city',
                        'date_of_birth' => 'dateOfBirth',
                        'password' => 'password',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'name' => 'name',
                        'lastName' => 'last_name',
                        'email' => 'email',
                        'dni' => 'dni',
                        'address' => 'address',
                        'city' => 'city',
                        'dateOfBirth' => 'date_of_birth',
                        'password' => 'password',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'jugador',
                    ],
                ],
                'associationMappings' => [
                    [
                        'ofertas' => $o[10],
                    ],
                ],
                'idGenerator' => [
                    $o[14],
                ],
                'name' => [
                    'App\\Entity\\Jugador',
                    11 => 'jugadores_ofertas',
                    'jugador_id',
                    'oferta_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'date',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'name',
                    'lastName',
                    'email',
                    'dni',
                    'address',
                    'city',
                    'dateOfBirth',
                    'password',
                ],
                'columnName' => [
                    1 => 'id',
                    'name',
                    'last_name',
                    'email',
                    'dni',
                    'address',
                    'city',
                    'date_of_birth',
                    'password',
                ],
                'length' => [
                    2 => 100,
                    100,
                    100,
                    9,
                    255,
                    100,
                    9 => 255,
                ],
                'unique' => [
                    4 => true,
                    true,
                ],
                'fetch' => [
                    10 => 2,
                ],
                'isOnDeleteCascade' => [
                    10 => true,
                ],
                'sourceEntity' => [
                    10 => 'App\\Entity\\Jugador',
                ],
                'inversedBy' => [
                    10 => 'jugadores',
                ],
                'joinTable' => [
                    10 => $o[11],
                ],
                'joinTableColumns' => [
                    10 => [
                        'jugador_id',
                        'oferta_id',
                    ],
                ],
                'relationToSourceKeyColumns' => [
                    10 => [
                        'jugador_id' => 'id',
                    ],
                ],
                'relationToTargetKeyColumns' => [
                    10 => [
                        'oferta_id' => 'id',
                    ],
                ],
                'joinColumns' => [
                    11 => [
                        $o[12],
                    ],
                ],
                'inverseJoinColumns' => [
                    11 => [
                        $o[13],
                    ],
                ],
                'onDelete' => [
                    12 => 'CASCADE',
                    'CASCADE',
                ],
                'referencedColumnName' => [
                    12 => 'id',
                    'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    10 => 'ofertas',
                ],
                'targetEntity' => [
                    10 => 'App\\Entity\\Oferta',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\JugadoresOfertas',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\JugadoresOfertasRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'esFavorito' => $o[2],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'es_favorito' => 'esFavorito',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'esFavorito' => 'es_favorito',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'jugadores_ofertas',
                    ],
                ],
                'associationMappings' => [
                    [
                        'oferta' => $o[3],
                        'jugador' => $o[5],
                    ],
                ],
                'idGenerator' => [
                    $o[7],
                ],
                'name' => [
                    'App\\Entity\\JugadoresOfertas',
                    4 => 'oferta_id',
                    6 => 'jugador_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'boolean',
                ],
                'fieldName' => [
                    1 => 'id',
                    'esFavorito',
                ],
                'columnName' => [
                    1 => 'id',
                    'es_favorito',
                ],
                'fetch' => [
                    3 => 2,
                    5 => 2,
                ],
                'sourceEntity' => [
                    3 => 'App\\Entity\\JugadoresOfertas',
                    5 => 'App\\Entity\\JugadoresOfertas',
                ],
                'sourceToTargetKeyColumns' => [
                    3 => [
                        'oferta_id' => 'id',
                    ],
                    5 => [
                        'jugador_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    3 => [
                        'id' => 'oferta_id',
                    ],
                    5 => [
                        'id' => 'jugador_id',
                    ],
                ],
                'joinColumns' => [
                    3 => [
                        $o[4],
                    ],
                    5 => [
                        $o[6],
                    ],
                ],
                'joinColumnFieldNames' => [
                    3 => [
                        'oferta_id' => 'oferta_id',
                    ],
                    5 => [
                        'jugador_id' => 'jugador_id',
                    ],
                ],
                'unique' => [
                    4 => false,
                    6 => false,
                ],
                'nullable' => [
                    4 => false,
                    6 => false,
                ],
                'referencedColumnName' => [
                    4 => 'id',
                    6 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    3 => 'oferta',
                    5 => 'jugador',
                ],
                'targetEntity' => [
                    3 => 'App\\Entity\\Oferta',
                    5 => 'App\\Entity\\Jugador',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Oferta',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\OfertaRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'titulo' => $o[2],
                        'descripcion' => $o[3],
                        'fechaInicio' => $o[4],
                        'fechaFin' => $o[5],
                        'estado' => $o[6],
                        'fechaCreacion' => $o[7],
                        'categoria' => $o[8],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'titulo' => 'titulo',
                        'descripcion' => 'descripcion',
                        'fecha_inicio' => 'fechaInicio',
                        'fecha_fin' => 'fechaFin',
                        'estado' => 'estado',
                        'fecha_creacion' => 'fechaCreacion',
                        'categoria' => 'categoria',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'titulo' => 'titulo',
                        'descripcion' => 'descripcion',
                        'fechaInicio' => 'fecha_inicio',
                        'fechaFin' => 'fecha_fin',
                        'estado' => 'estado',
                        'fechaCreacion' => 'fecha_creacion',
                        'categoria' => 'categoria',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'oferta',
                    ],
                ],
                'associationMappings' => [
                    [
                        'club' => $o[9],
                        'jugadores' => $o[11],
                    ],
                ],
                'idGenerator' => [
                    $o[12],
                ],
                'name' => [
                    'App\\Entity\\Oferta',
                    10 => 'club_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'text',
                    'date',
                    'date',
                    'string',
                    'datetime',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'titulo',
                    'descripcion',
                    'fechaInicio',
                    'fechaFin',
                    'estado',
                    'fechaCreacion',
                    'categoria',
                ],
                'columnName' => [
                    1 => 'id',
                    'titulo',
                    'descripcion',
                    'fecha_inicio',
                    'fecha_fin',
                    'estado',
                    'fecha_creacion',
                    'categoria',
                ],
                'length' => [
                    2 => 255,
                    6 => 20,
                    8 => 50,
                ],
                'fetch' => [
                    9 => 2,
                    11 => 2,
                ],
                'sourceEntity' => [
                    9 => 'App\\Entity\\Oferta',
                    11 => 'App\\Entity\\Oferta',
                ],
                'inversedBy' => [
                    9 => 'ofertas',
                ],
                'sourceToTargetKeyColumns' => [
                    9 => [
                        'club_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    9 => [
                        'id' => 'club_id',
                    ],
                ],
                'joinColumns' => [
                    9 => [
                        $o[10],
                    ],
                ],
                'joinColumnFieldNames' => [
                    9 => [
                        'club_id' => 'club_id',
                    ],
                ],
                'unique' => [
                    10 => false,
                ],
                'nullable' => [
                    10 => false,
                ],
                'referencedColumnName' => [
                    10 => 'id',
                ],
                'mappedBy' => [
                    11 => 'ofertas',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    9 => 'club',
                    11 => 'jugadores',
                ],
                'targetEntity' => [
                    9 => 'App\\Entity\\Club',
                    11 => 'App\\Entity\\Jugador',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
